{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/EditPet.jsx","components/Detail.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","petNames","setPetNames","fetchPetNames","axios","get","then","res","console","log","data","catch","err","useEffect","map","act","i","className","key","_id","petName","petType","petDescription","skill1","skill2","skill3","to","onClick","e","delete","PetForm","setPetName","setPetType","setPetDescription","setSkill1","setSkill2","setSkill3","errors","setErrors","onSubmit","preventDefault","petItem","post","navigate","type","onChange","target","value","properties","message","EditPet","put","Detail","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.750952bb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\n\r\n\r\nconst Display = props => {\r\n\r\n    // const [all, setAll] = useState([]);\r\n    \r\n    const [petNames, setPetNames] = useState([]);\r\n\r\n    const fetchPetNames = () => {\r\n        axios.get(\"http://localhost:8000/api/pet\")\r\n            .then(res => {\r\n                console.log(res);\r\n                // setAll(res.data);\r\n                \r\n                setPetNames(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetchPetNames();\r\n    }, []);\r\n\r\n    const remove = _id => {\r\n        console.log(_id);\r\n        axios.delete(`http://localhost:8000/api/pet/${_id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                fetchPetNames();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {petNames.map( (act, i) => \r\n                <div className=\"card mb-3\" key={act._id}>\r\n                    <div className=\"card-header bg-primary text-light\">{act.petName}</div>\r\n                    <div className=\"card-body\">\r\n                        <p>Pet Type: {act.petType}</p>\r\n                        <p>Pet Description:{act.petDescription}</p>\r\n                        <p>Skills:{act.skill1},{act.skill2},{act.skill3}</p>\r\n                        <Link className=\"btn btn-outline-primary\" to={`/edit/${act._id}`}>Edit</Link>\r\n                        <button className=\"btn btn-outline-danger float-right\" onClick={e => remove(act._id)}>Adopt {act.petName}</button>\r\n                        <Link className=\"btn btn-outline-primary\" to={`/info/${act._id}`}>Details</Link>\r\n                        \r\n                    </div>\r\n                </div>\r\n                // <table class=\"table\">\r\n                // <thead class=\"thead-dark\">\r\n                //     <tr>                    \r\n                //     <th>Pet Name</th>\r\n                //     <th>Type</th>\r\n                //     <th>Actions</th>\r\n                //     </tr>\r\n                // </thead>\r\n                // <tbody>\r\n                //     <tr>\r\n                //     <td>{act.petName}</td>\r\n                //     <td>{act.petType}</td>\r\n                //     </tr>\r\n                // </tbody>\r\n                // </table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nconst PetForm = props => {\r\n    const [petName, setPetName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [petDescription, setPetDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const CreatePet = e => {\r\n        e.preventDefault();\r\n        const petItem = {petName,petType, petDescription,skill1, skill2, skill3};\r\n        axios.post(\"http://localhost:8000/api/pet\", petItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreatePet}>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetName(e.target.value)} />\r\n                    { errors.petName ? <p className=\"text-danger\">{errors.petName.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetType(e.target.value)} />\r\n                    { errors.petType ? <p className=\"text-danger\">{errors.petType.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Description</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetDescription(e.target.value)} />\r\n                    { errors.petDescription ? <p className=\"text-danger\">{errors.petDescription.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 1</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 2</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 3</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} />\r\n                </div>\r\n                \r\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PetForm;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport { Link, Router } from '@reach/router';\r\n\r\n\r\nconst EditPet = props => {\r\n    const [petName, setPetName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [petDescription, setPetDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    \r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setPetName(res.data.petName);\r\n                setPetType(res.data.petType);\r\n                setPetDescription(res.data.petDescription);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const UpdatePet = e => {\r\n        e.preventDefault();\r\n        const petItem = {petName,petType, petDescription,skill1, skill2, skill3};\r\n        axios.put(`http://localhost:8000/api/pet/${props._id}`, petItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            \r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdatePet}>\r\n            <div className=\"form-group\">\r\n                    <label>Pet Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetName(e.target.value)} value = {petName}/>\r\n                    { errors.petName ? <p className=\"text-danger\">{errors.petName.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetType(e.target.value)} value = {petType}/>\r\n                    { errors.petType ? <p className=\"text-danger\">{errors.petType.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Description</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPetDescription(e.target.value)} value = {petDescription}/>\r\n                    { errors.petDescription ? <p className=\"text-danger\">{errors.petDescription.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 1</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill1(e.target.value)} value = {skill1}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 2</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill2(e.target.value)} value = {skill2}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 3</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill3(e.target.value)} value = {skill3}/>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Edit Pet\" />\r\n            </form>\r\n            <div className=\"col-sm-8 offset-sm-2 mt-5\">\r\n                <button className=\"btn btn-danger btn-block\" onClick={remove}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditPet;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Detail = props => {\r\n    const [petName, setPetName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [petDescription, setPetDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    \r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setPetName(res.data.petName);\r\n                setPetType(res.data.petType);\r\n                setPetDescription(res.data.petDescription);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/pet/${props._id}`)\r\n        .then(res => {\r\n            console.log(res);\r\n            navigate(\"/\");\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card mb-1\">\r\n                <div className=\"card-header\">Pet Name: {petName}</div>\r\n                <div className=\"card-body\">\r\n                    <p>Pet Type: {petType}</p>\r\n                    <p>Description: {petDescription}</p>\r\n                    <p>Skill 1: {skill1}</p>\r\n                    <p>Skill 2: {skill2}</p>\r\n                    <p>Skill 3: {skill3}</p>\r\n                    <button className=\"btn btn-outline-danger float-right\" onClick={remove} >Adopt Pet Now!</button>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from \"./components/Display\";\nimport PetForm from \"./components/PetForm\";\nimport EditPet from \"./components/EditPet\";\nimport Detail from \"./components/Detail\";\nimport { Link, Router } from '@reach/router';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Pet Shelter</h1>\n      <h3>These pets are looking for a loving home</h3>\n      <Link className=\"btn btn-info\" to=\"/\">Back to Home</Link>\n      <Link className=\"btn btn-info\" to=\"/new\">Add a pet</Link>\n      <Router className=\"my-5\">\n        <Display path=\"/\" />\n        <PetForm path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <Detail path=\"/info/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;                           \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}